 Subject: HPUX compilation goes wrong...

     From: Yiorgos Adamopoulos <Y.Adamopoulos@noc.ntua.gr>

     I successfully compiled MsqlPerl for a HP817 (HP-UX 9.04/s800) using Perl5.002,
     msql-1.0.14 and gcc-2.7.2.  I added CC_ONLY = -fPIC to site.mm after running
     setup.


 Subject: Where can I find more documentation?

     Msql.pm IS the manpage in pod format. If you're on UNIX you should be
     able to read it with 'man Msql'. On other operation systems try
     'perldoc Msql'. Also, the test script, t/msql.t might help you to sort
     things out. The most recent addition is the pmsql program which may
     also help you to learning by example.

 Subject: How do I retrieve fields by name

     The internal fetchhash routine is quite good. If you need speed,
     you should hardcode your column names into a hash
     slice. Everything else is a terrible waste.

		     closure:  8 secs ( 7.47 usr  0.03 sys =  7.50 cpu)
	  hashslice via name: 10 secs ( 9.51 usr  0.04 sys =  9.55 cpu)
	  internal_fetchhash:  7 secs ( 7.05 usr  0.03 sys =  7.08 cpu)
       brute force fetchhash: 15 secs (13.90 usr  0.05 sys = 13.95 cpu)
     hashslice via constants:  6 secs ( 5.57 usr  0.02 sys =  5.59 cpu)

     #!/usr/bin/perl

     use Msql;
     my $db = Msql->Connect("","mod");
     $sth = $db->Query("select * from mods");


     sub Msql::Statement::brute_fetchhash {
	 my $self = shift;
	 my %hash;
	 @hash{ $self->name } = $self->FetchRow and \%hash;
     }

     sub Msql::Statement::gimme_a_fetchhash_routine {
	 my $self = shift;
	 my @z = $sth->name;
	 sub { my %hash; @hash{@z} = $self->FetchRow and \%hash;};
     }

     use Benchmark;

     timethese(20, {
     'hashslice via constants' => q{
	 $sth->DataSeek(0);
	 while (@row{qw/modid userid maillistid chapterid seqdummy statd stats statl stati description changed changedby/} = $sth->FetchRow){
	     $X = $row{modid};
	     print "$X\n" ;
	 }
     },

     '     hashslice via name' => q{
	 $sth->DataSeek(0);
	 while (@row{$sth->name} = $sth->FetchRow){
	     $X = $row{modid};
	     print "$X\n" ;
	 }
     },

     '  brute force fetchhash' => q{
	 $sth->DataSeek(0);
	 while ($hashref = $sth->brute_fetchhash){
	     $X = $hashref->{modid};
	     print "$X\n" ;
	 }
     },
     '                closure' => q{
	 $sth->DataSeek(0);
	 $clos = $sth->gimme_a_fetchhash_routine;
	 while ($hashref = &$clos){
	     $X = $hashref->{modid};
	     print "$X\n" ;
	 }
     },
     '     internal_fetchhash' => q{
	 $sth->DataSeek(0);
	 while (%hash = $sth->fetchhash){
	     $X = $hash{modid};
	     print "$X\n" ;
	 }
     },
     });



